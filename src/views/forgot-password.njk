{% extends "templates/layout.njk" %}

{% block applicationTitle %}Forgot Password - Kainos Job Application{% endblock %}

{% block content %}
<main id="main-content" class="min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8 bg-gradient-to-br from-blue-50 via-white to-green-50">
    <div class="max-w-md w-full space-y-8">
        <!-- Header -->
        <div class="text-center">
            <img src="/KainosLogoNoBackground.png" alt="Kainos Logo" class="mx-auto h-16 w-auto mb-6">
            <h2 class="text-3xl font-bold text-gray-900 mb-2">Reset Your Password</h2>
            <p class="text-gray-600">Enter your username or email address and we'll help you reset your password</p>
        </div>

        <!-- Forgot Password Form -->
        <div class="bg-white rounded-2xl shadow-xl p-8 border border-gray-100">
            {% if success %}
            <!-- Success Message -->
            <div class="bg-green-50 border-l-4 border-green-500 p-4 rounded-lg mb-6">
                <div class="flex items-center">
                    <svg class="w-5 h-5 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                    </svg>
                    <p class="text-sm text-green-700">
                        Password reset instructions have been sent to your email address (demo mode: contact admin for assistance).
                    </p>
                </div>
            </div>
            
            <div class="text-center space-y-4">
                <a href="/login" class="inline-flex items-center text-blue-600 hover:text-blue-700 font-medium transition-colors">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1" />
                    </svg>
                    Back to Login
                </a>
            </div>
            {% else %}
            <form id="forgotPasswordForm" action="/forgot-password" method="POST" class="space-y-6" novalidate>
                <!-- Username/Email Field -->
                <div>
                    <label for="usernameOrEmail" class="block text-sm font-semibold text-gray-700 mb-2">
                        Username or Email Address <span class="text-red-500">*</span>
                    </label>
                    <div class="relative">
                        <input 
                            type="text" 
                            id="usernameOrEmail" 
                            name="usernameOrEmail" 
                            required 
                            value="{{ formData.usernameOrEmail if formData else '' }}"
                            placeholder="Enter your username or email"
                            class="w-full px-4 py-3 pr-12 border-2 border-gray-200 rounded-lg focus:border-blue-500 focus:outline-none transition-all duration-200 text-gray-900 bg-white placeholder-gray-400 {{ 'border-red-500 focus:border-red-500' if fieldErrors.usernameOrEmail else '' }}"
                            autocomplete="username email"
                            data-field="usernameOrEmail"
                        >
                        <!-- Success/Error Icons -->
                        <div class="absolute right-3 top-1/2 -translate-y-1/2">
                            <svg id="usernameOrEmail-success" class="w-5 h-5 text-green-500 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                            </svg>
                            <svg id="usernameOrEmail-error" class="w-5 h-5 text-red-500 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                            </svg>
                        </div>
                    </div>
                    <!-- Error Message -->
                    <div id="usernameOrEmail-error-msg" class="mt-1 text-sm text-red-600 {{ 'block' if fieldErrors.usernameOrEmail else 'hidden' }}">
                        {{ fieldErrors.usernameOrEmail if fieldErrors.usernameOrEmail }}
                    </div>
                    <div class="mt-1 text-xs text-gray-500">
                        We'll send password reset instructions to the email associated with this account
                    </div>
                </div>

                <!-- Demo Notice -->
                <div class="bg-blue-50 border-l-4 border-blue-500 p-4 rounded-lg">
                    <div class="flex items-start">
                        <svg class="w-5 h-5 text-blue-500 mr-2 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                        </svg>
                        <div class="text-sm text-blue-700">
                            <p class="font-medium">Demo Mode</p>
                            <p class="mt-1">In demo mode, password reset will show success but no emails are sent. Contact an administrator for actual password assistance.</p>
                        </div>
                    </div>
                </div>

                <!-- Error Message -->
                {% if error %}
                <div class="bg-red-50 border-l-4 border-red-500 p-4 rounded-lg">
                    <div class="flex items-center">
                        <svg class="w-5 h-5 text-red-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                        </svg>
                        <p class="text-sm text-red-700">{{ error }}</p>
                    </div>
                </div>
                {% endif %}

                <!-- Submit Button -->
                <button 
                    type="submit" 
                    id="submitBtn"
                    class="w-full bg-gradient-to-r from-blue-600 to-green-600 text-white font-semibold py-3 px-4 rounded-lg hover:from-blue-700 hover:to-green-700 transition-all duration-200 flex items-center justify-center gap-2 shadow-lg focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed"
                    disabled
                >
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                    </svg>
                    Send Reset Instructions
                </button>
            </form>
            {% endif %}
        </div>

        <!-- Navigation Links -->
        <div class="text-center space-y-4">
            <div>
                <p class="text-gray-600">
                    Remember your password? 
                    <a href="/login" class="text-blue-600 hover:text-blue-700 font-semibold transition-colors">Sign in</a>
                </p>
            </div>
            <div>
                <p class="text-gray-600">
                    Don't have an account? 
                    <a href="/register" class="text-blue-600 hover:text-blue-700 font-semibold transition-colors">Create one</a>
                </p>
            </div>
        </div>

        <!-- Back to Home -->
        <div class="text-center">
            <a href="/" class="inline-flex items-center text-gray-600 hover:text-gray-900 transition-colors">
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
                </svg>
                Back to Home
            </a>
        </div>
    </div>
</main>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('forgotPasswordForm');
    if (!form) return; // Exit if success page is shown
    
    const usernameOrEmailInput = document.getElementById('usernameOrEmail');
    const submitBtn = document.getElementById('submitBtn');
    
    let validation = {
        usernameOrEmail: false
    };
    
    // Validation function
    function validateUsernameOrEmail(input) {
        if (!input || input.trim().length === 0) {
            return { isValid: false, error: 'Username or email is required' };
        }
        
        const trimmed = input.trim();
        if (trimmed.length < 3) {
            return { isValid: false, error: 'Please enter at least 3 characters' };
        }
        
        return { isValid: true };
    }
    
    // Show field validation state
    function showFieldState(field, isValid, error = '') {
        const input = document.getElementById(field);
        const errorMsg = document.getElementById(`${field}-error-msg`);
        const successIcon = document.getElementById(`${field}-success`);
        const errorIcon = document.getElementById(`${field}-error`);
        
        if (isValid) {
            input.classList.remove('border-red-500', 'focus:border-red-500');
            input.classList.add('border-green-500', 'focus:border-green-500');
            errorMsg.classList.add('hidden');
            errorMsg.textContent = '';
            if (successIcon) successIcon.classList.remove('hidden');
            if (errorIcon) errorIcon.classList.add('hidden');
        } else {
            input.classList.remove('border-green-500', 'focus:border-green-500');
            input.classList.add('border-red-500', 'focus:border-red-500');
            errorMsg.classList.remove('hidden');
            errorMsg.textContent = error;
            if (successIcon) successIcon.classList.add('hidden');
            if (errorIcon) errorIcon.classList.remove('hidden');
        }
        
        validation[field] = isValid;
        updateSubmitButton();
    }
    
    // Update submit button state
    function updateSubmitButton() {
        const isFormValid = validation.usernameOrEmail;
        submitBtn.disabled = !isFormValid;
        
        if (isFormValid) {
            submitBtn.classList.remove('opacity-50', 'cursor-not-allowed');
            submitBtn.classList.add('hover:from-blue-700', 'hover:to-green-700');
        } else {
            submitBtn.classList.add('opacity-50', 'cursor-not-allowed');
            submitBtn.classList.remove('hover:from-blue-700', 'hover:to-green-700');
        }
    }
    
    // Real-time validation
    usernameOrEmailInput.addEventListener('input', function() {
        const result = validateUsernameOrEmail(this.value);
        showFieldState('usernameOrEmail', result.isValid, result.error);
    });
    
    usernameOrEmailInput.addEventListener('blur', function() {
        const result = validateUsernameOrEmail(this.value);
        showFieldState('usernameOrEmail', result.isValid, result.error);
    });
    
    // Form submission
    form.addEventListener('submit', function(e) {
        // Final validation
        const result = validateUsernameOrEmail(usernameOrEmailInput.value);
        
        if (!result.isValid) {
            e.preventDefault();
            showFieldState('usernameOrEmail', false, result.error);
            return;
        }
        
        // Show loading state
        submitBtn.disabled = true;
        const originalText = submitBtn.innerHTML;
        submitBtn.innerHTML = `
            <svg class="animate-spin w-5 h-5 inline-block mr-2" fill="none" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
            Sending Instructions...
        `;
        
        // Re-enable after 10 seconds as fallback
        setTimeout(() => {
            submitBtn.disabled = false;
            submitBtn.innerHTML = originalText;
        }, 10000);
    });
    
    // Initialize
    updateSubmitButton();
    usernameOrEmailInput.focus();
});
</script>

{% endblock %}