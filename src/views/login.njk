{% extends "templates/layout.njk" %}

{% block title %}Login{% endblock %}

{% block content %}
<main id="main-content" class="p-8 min-h-screen bg-white dark:bg-gray-900">
    <div class="max-w-md mx-auto bg-white dark:bg-gray-800 p-8 rounded-lg shadow-lg">
        <h1 class="text-2xl font-bold text-gray-900 dark:text-white mb-6">Login</h1>
        
        <!-- Error message area -->
        <div id="error-message" class="hidden mb-4 p-4 bg-red-100 dark:bg-red-900 border border-red-400 dark:border-red-700 text-red-700 dark:text-red-200 rounded" role="alert">
            <p id="error-text"></p>
        </div>

        <form id="login-form" class="mb-8">
            <div class="mb-4">
                <label for="email" class="block text-gray-700 dark:text-gray-300 font-bold mb-2">Email</label>
                <input 
                    type="email" 
                    id="email" 
                    name="email" 
                    required 
                    class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white rounded focus:outline-none focus:ring-2 focus:ring-blue-500"
                >
            </div>

            <div class="mb-6">
                <label for="password" class="block text-gray-700 dark:text-gray-300 font-bold mb-2">Password</label>
                <div class="relative">
                    <input 
                        type="password" 
                        id="password" 
                        name="password" 
                        required 
                        class="w-full px-3 py-2 pr-12 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white rounded focus:outline-none focus:ring-2 focus:ring-blue-500"
                    >
                    <button 
                        type="button" 
                        id="togglePassword"
                        class="absolute inset-y-0 right-3 flex items-center justify-center w-8 h-8 text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 focus:outline-none"
                        onclick="togglePasswordVisibility()"
                    >
                        <i id="eyeIcon" data-lucide="eye" class="w-5 h-5"></i>
                        <i id="eyeClosedIcon" data-lucide="eye-closed" class="w-5 h-5 hidden"></i>
                    </button>
                </div>
            </div>

            <button 
                type="submit" 
                id="login-button"
                class="w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed"
            >
                Login
            </button>
        </form>

        <div class="bg-gray-100 dark:bg-gray-700 p-4 rounded border">
            <h3 class="text-lg font-bold text-gray-900 dark:text-white mb-4">Demo Credentials</h3>
            <div class="mb-4">
                <p class="text-gray-900 dark:text-white font-bold">Admin User</p>
                <p class="text-gray-700 dark:text-gray-300">Email: admin@kainos.com</p>
                <p class="text-gray-700 dark:text-gray-300">Password: admin123</p>
            </div>
            <div>
                <p class="text-gray-900 dark:text-white font-bold">Regular User</p>
                <p class="text-gray-700 dark:text-gray-300">Email: user@kainos.com</p>
                <p class="text-gray-700 dark:text-gray-300">Password: user123</p>
            </div>
        </div>
    </div>
</main>

<style>
/* Adjusting the eye icon positioning */
#togglePassword {
    top: 50%;
    right: 0.25rem; /* Moves it slightly more right */
    transform: translateY(-50%);
}
</style>

<script>
function togglePasswordVisibility() {
    const passwordInput = document.getElementById('password');
    const eyeIcon = document.getElementById('eyeIcon');
    const eyeClosedIcon = document.getElementById('eyeClosedIcon');

    if (passwordInput.type === 'text') {
        passwordInput.type = 'password';
        eyeIcon.classList.remove('hidden');
        eyeClosedIcon.classList.add('hidden');
    } else {
        passwordInput.type = 'text';
        eyeIcon.classList.add('hidden');
        eyeClosedIcon.classList.remove('hidden');
    }

    // Re-initialize Lucide icons after toggle
    if (typeof lucide !== 'undefined') {
        lucide.createIcons();
    }
}

// Handle login form submission
document.getElementById('login-form').addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const email = document.getElementById('email').value;
    const password = document.getElementById('password').value;
    const loginButton = document.getElementById('login-button');
    const errorMessage = document.getElementById('error-message');
    const errorText = document.getElementById('error-text');
    
    // Disable button and show loading state
    loginButton.disabled = true;
    loginButton.textContent = 'Logging in...';
    errorMessage.classList.add('hidden');
    
    try {
        const response = await fetch('/api/auth/login', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ email, password }),
        });
        
        const data = await response.json();
        
        if (data.success) {
            // Redirect to home page on successful login
            window.location.href = '/';
        } else {
            // Show error message
            errorText.textContent = data.message || 'Login failed. Please try again.';
            errorMessage.classList.remove('hidden');
        }
    } catch (error) {
        console.error('Login error:', error);
        errorText.textContent = 'An error occurred during login. Please try again.';
        errorMessage.classList.remove('hidden');
    } finally {
        // Re-enable button
        loginButton.disabled = false;
        loginButton.textContent = 'Login';
    }
});
</script>
{% endblock %}