{% extends "templates/layout.njk" %}

{% block applicationTitle %}{{ jobRole.roleName }} - Job Details | Kainos{% endblock %}

{% block content %}
<main id="main-content" class="pt-4">
<div class="container mx-auto px-4 py-8">
    {# Macro for status badge styling #}
    {% macro statusBadge(status) %}
            {%- set badgeClass = 'badge-success' if status == 'Open' else ('badge-warning' if status == 'Closing Soon' else 'badge-error') -%}
                    <div class="badge {{ badgeClass }} badge-lg">{{ status }}</div>
    {% endmacro %}
    
    <!-- Success Message (shown after creating or updating a job role) -->
    {% if created or updated %}
    <div id="successMessage" class="mb-8 bg-green-50 border-2 border-green-500 rounded-2xl shadow-lg p-6 animate-fade-in">
        <div class="flex items-start gap-4">
            <div class="flex-shrink-0">
                <svg class="w-8 h-8 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
            </div>
            <div class="flex-1">
                <h3 class="text-xl font-bold text-green-900 mb-2">
                    {% if created %}
                    Job Role Created Successfully! üéâ
                    {% else %}
                    Job Role Updated Successfully! ‚úÖ
                    {% endif %}
                </h3>
                <p class="text-green-800 mb-4">
                    {% if created %}
                    Your new job role "<strong>{{ jobRole.roleName }}</strong>" has been created and is now live. Candidates can now view and apply for this position.
                    {% else %}
                    The job role "<strong>{{ jobRole.roleName }}</strong>" has been updated successfully. All changes are now live.
                    {% endif %}
                </p>
                <a href="/job-roles" class="inline-flex items-center px-6 py-3 bg-green-600 text-white font-semibold rounded-lg hover:bg-green-700 transition-colors duration-200 shadow-md hover:shadow-lg">
                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                    </svg>
                    View All Open Positions
                </a>
            </div>
            <button id="closeSuccess" class="flex-shrink-0 text-green-600 hover:text-green-800 transition-colors">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
            </button>
        </div>
    </div>
    <script>
        // Auto-hide success message after 10 seconds
        setTimeout(() => {
            const msg = document.getElementById('successMessage');
            if (msg) {
                msg.style.opacity = '0';
                msg.style.transition = 'opacity 0.5s';
                setTimeout(() => msg.remove(), 500);
            }
        }, 10000);
        
        // Allow manual close
        document.getElementById('closeSuccess')?.addEventListener('click', () => {
            const msg = document.getElementById('successMessage');
            if (msg) {
                msg.style.opacity = '0';
                msg.style.transition = 'opacity 0.5s';
                setTimeout(() => msg.remove(), 500);
            }
        });
    </script>
    {% endif %}
    
    <!-- Header Section -->
    <header class="text-center mb-12">
        <div class="bg-gradient-to-r from-blue-600 via-blue-700 to-green-600 rounded-3xl shadow-2xl p-12 text-white relative overflow-hidden">
            <!-- Animated background -->
            <div class="absolute inset-0 bg-gradient-to-r from-blue-600/20 via-blue-700/20 to-green-600/20 animate-pulse"></div>
            
            <!-- Decorative elements -->
            <div class="absolute top-4 right-4 w-20 h-20 bg-white/10 rounded-full blur-xl animate-pulse"></div>
            <div class="absolute bottom-4 left-4 w-16 h-16 bg-green-400/20 rounded-full blur-lg animate-pulse" style="animation-delay: 1s"></div>

            <!-- Content -->
            <div class="relative z-10">
                <!-- Kainos Logo -->
                <div class="flex items-center justify-center mb-8">
                    <img src="/kainos-dark-bg.png" alt="Kainos Logo" class="h-16 w-auto">
                </div>
                
                <h1 class="text-4xl md:text-6xl font-light mb-6">{{ jobRole.roleName }}</h1>
                
                <div class="bg-white/20 backdrop-blur-sm rounded-2xl p-6 inline-block">
                    <p class="text-xl">üíº Job Opportunity Details</p>
                </div>
            </div>
        </div>
    </header>

    <div class="max-w-6xl mx-auto">
        <!-- Job Details Card -->
        <div class="bg-white rounded-2xl shadow-lg mb-8 p-8">
            <!-- Key Information Bar -->
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
                <div class="flex items-center gap-3 p-4 bg-blue-50 rounded-xl">
                    <span class="icon text-blue-600 text-2xl">üìç</span>
                    <div>
                        <p class="text-sm text-gray-600 font-medium">Location</p>
                        <p class="font-semibold text-gray-900">{{ jobRole.location }}</p>
                    </div>
                </div>
                
                <div class="flex items-center gap-3 p-4 bg-green-50 rounded-xl">
                    <span class="icon text-green-600 text-2xl">üè∑Ô∏è</span>
                    <div>
                        <p class="text-sm text-gray-600 font-medium">Capability</p>
                        <p class="font-semibold text-gray-900">{{ jobRole.capability }}</p>
                    </div>
                </div>
                
                <div class="flex items-center gap-3 p-4 bg-purple-50 rounded-xl">
                    <span class="icon text-purple-600 text-2xl">üíº</span>
                    <div>
                        <p class="text-sm text-gray-600 font-medium">Band Level</p>
                        <span class="inline-block bg-purple-600 text-white px-3 py-1 rounded-full text-sm font-semibold">{{ jobRole.band | formatBand }}</span>
                    </div>
                </div>
                
                <div class="flex items-center gap-3 p-4 bg-orange-50 rounded-xl">
                    <span class="icon text-orange-600 text-2xl">üë•</span>
                    <div>
                        <p class="text-sm text-gray-600 font-medium">Positions</p>
                        <p class="font-semibold text-gray-900">{{ jobRole.numberOfOpenPositions }} position{{ 's' if jobRole.numberOfOpenPositions != 1 else '' }}</p>
                    </div>
                </div>
            </div>
            
            <!-- Status and Closing Date -->
            <div class="flex flex-wrap gap-4 items-center justify-between mb-8 p-4 bg-gray-50 rounded-xl">
                <div class="flex flex-wrap gap-4 items-center">
                    {{ statusBadge(jobRole.status) }}
                    
                    <div class="flex items-center gap-2">
                        <span class="icon text-gray-500 text-xl">üìÖ</span>
                        <span class="text-gray-700 font-medium">Closes: {{ jobRole.closingDate | formatDate }}</span>
                    </div>
                </div>
                
                <!-- Delete Form (works without JavaScript) -->
                <div id="deleteButtonContainer" class="flex items-center">
                    <form id="deleteForm" method="POST" action="/job-roles/{{ jobRole.jobRoleId }}/delete" class="inline">
                        <input type="hidden" name="_method" value="DELETE">
                        <button type="button" id="deleteJobRoleBtn" class="inline-flex items-center px-4 py-2 font-medium rounded-lg transition-all duration-200 shadow-lg border" style="background-color: #dc2626; color: white; border-color: #b91c1c;" onmouseover="this.style.backgroundColor='#b91c1c'" onmouseout="this.style.backgroundColor='#dc2626'">
                            <svg class="w-4 h-4 mr-2" fill="none" stroke="white" viewBox="0 0 24 24" style="color: white;">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                            </svg>
                            Delete Job
                        </button>
                        <div id="confirmButtons" class="hidden items-center gap-3">
                            <span class="text-gray-700 dark:text-gray-300 font-semibold text-lg">Delete?</span>
                            <button type="submit" id="confirmYes" class="px-5 py-2 font-bold rounded-lg transition-all duration-200 shadow-md hover:shadow-lg transform hover:-translate-y-0.5" style="background-color: #dc2626; color: white;" onmouseover="this.style.backgroundColor='#b91c1c'" onmouseout="this.style.backgroundColor='#dc2626'">
                                Yes
                            </button>
                            <button type="button" id="confirmNo" class="px-5 py-2 font-bold rounded-lg transition-all duration-200 shadow-md hover:shadow-lg transform hover:-translate-y-0.5" style="background-color: #6b7280; color: white;" onmouseover="this.style.backgroundColor='#4b5563'" onmouseout="this.style.backgroundColor='#6b7280'">
                                No
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Job Description -->
        <div class="bg-white rounded-2xl shadow-lg mb-8 p-8">
            <h2 class="text-3xl font-bold text-gray-900 mb-6 flex items-center gap-3">
                <span class="icon text-blue-600 text-2xl">üìù</span>
                Job Description
            </h2>
            <div class="bg-blue-50 rounded-xl p-6">
                <p class="text-lg leading-relaxed text-gray-800">{{ jobRole.description }}</p>
            </div>
        </div>

        <!-- Key Responsibilities -->
        <div class="bg-white rounded-2xl shadow-lg mb-8 p-8">
            <h2 class="text-3xl font-bold text-gray-900 mb-6 flex items-center gap-3">
                <span class="icon text-green-600 text-2xl">‚úÖ</span>
                Key Responsibilities
            </h2>
            <div class="bg-green-50 rounded-xl p-6">
                <div class="whitespace-pre-line text-lg leading-relaxed text-gray-800">
                    {{ jobRole.responsibilities }}
                </div>
            </div>
        </div>

        <!-- Job Specification Link -->
        <div class="bg-white rounded-2xl shadow-lg mb-8 p-8">
            <h2 class="text-3xl font-bold text-gray-900 mb-6 flex items-center gap-3">
                <span class="icon text-purple-600 text-2xl">üîó</span>
                Additional Information
            </h2>
            <div class="bg-purple-50 rounded-xl p-6">
                <p class="text-lg leading-relaxed text-gray-800 mb-6">For detailed job specifications, requirements, and application process, please visit our SharePoint portal:</p>
                <a href="{{ jobRole.jobSpecLink }}" target="_blank" class="inline-flex items-center px-8 py-4 bg-gradient-to-r from-purple-600 to-blue-600 text-white font-bold rounded-xl shadow-lg hover:from-purple-700 hover:to-blue-700 hover:shadow-xl transform hover:-translate-y-1 transition-all duration-200">
                    <span class="icon mr-3 text-xl">üîó</span>
                    View Full Job Specification
                </a>
            </div>
        </div>

        <!-- Action Buttons -->
        <div class="bg-white rounded-2xl shadow-lg mb-8 p-8">
            <div class="flex flex-col md:flex-row gap-6 justify-center">
                <a href="/job-roles" class="inline-flex items-center px-8 py-4 bg-white border-2 border-blue-600 text-blue-600 font-bold rounded-xl shadow-lg hover:bg-blue-50 hover:shadow-xl transform hover:-translate-y-1 transition-all duration-200">
                    <span class="icon mr-3 text-xl">‚¨ÖÔ∏è</span>
                    Back to All Roles
                </a>
                
                {# Show Apply button only if role is active and has positions available #}
                {% if jobRole.numberOfOpenPositions > 0 and jobRole.status|lower == 'active' %}
                <a href="/job-roles/{{ jobRole.jobRoleId }}/apply" class="inline-flex items-center px-8 py-4 bg-gradient-to-r from-blue-600 to-green-600 text-white font-bold rounded-xl shadow-lg hover:from-blue-700 hover:to-green-700 hover:shadow-xl transform hover:-translate-y-1 transition-all duration-200">
                    <span class="icon mr-3 text-xl">üìß</span>
                    Apply Now
                </a>
                {% else %}
                <div class="inline-flex items-center px-8 py-4 bg-gray-300 text-gray-600 font-bold rounded-xl shadow-lg cursor-not-allowed opacity-75">
                    <span class="icon mr-3 text-xl">üö´</span>
                    Applications Closed
                </div>
                {% endif %}
            </div>
        </div>
        
        <!-- Back to Home -->
        <div class="text-center">
            <a href="/" class="inline-flex items-center px-6 py-3 text-blue-600 hover:text-blue-700 font-medium transition-colors duration-200">
                ‚Üê Back to Home
            </a>
        </div>
    </div>

    <!-- Success/Error Message Toast -->
    <div id="messageToast" class="hidden fixed top-8 right-8 z-50 animate-slide-in">
        <div class="bg-white dark:bg-slate-800 rounded-2xl shadow-2xl p-5 flex items-center gap-4 max-w-md border-l-4">
            <div id="toastIcon" class="text-3xl"></div>
            <p id="toastMessage" class="font-semibold text-lg"></p>
        </div>
    </div>
</div>
</main>

<script>
// Progressive Enhancement: Delete Job Role with AJAX when JavaScript is enabled
// Fallback: Form submission works without JavaScript
(function() {
    const deleteBtn = document.getElementById('deleteJobRoleBtn');
    const deleteForm = document.getElementById('deleteForm');
    const confirmButtons = document.getElementById('confirmButtons');
    const confirmYes = document.getElementById('confirmYes');
    const confirmNo = document.getElementById('confirmNo');
    const toast = document.getElementById('messageToast');
    const toastIcon = document.getElementById('toastIcon');
    const toastMessage = document.getElementById('toastMessage');

    // Show confirmation buttons when delete is clicked
    deleteBtn?.addEventListener('click', function(e) {
        e.preventDefault(); // Prevent form submission
        // Hide delete button
        deleteBtn.style.display = 'none';
        // Show confirmation buttons
        confirmButtons.style.display = 'flex';
    });

    // Handle "No" - cancel deletion
    confirmNo?.addEventListener('click', function() {
        // Hide confirmation buttons
        confirmButtons.style.display = 'none';
        // Show delete button
        deleteBtn.style.display = 'inline-flex';
    });

    // Handle form submission with AJAX (progressive enhancement)
    deleteForm?.addEventListener('submit', async function(e) {
        e.preventDefault(); // Prevent default form submission

        const formAction = this.action;
        const jobRoleId = formAction.match(/job-roles\/(\d+)/)?.[1];
        
        if (!jobRoleId) return;

        // Disable buttons during request
        confirmYes.disabled = true;
        confirmNo.disabled = true;
        confirmYes.textContent = 'Deleting...';

        try {
            const response = await fetch(`/job-roles/${jobRoleId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            const data = await response.json();

            if (response.ok && data.success) {
                // Show success message
                showToast('‚úÖ', 'Job role deleted successfully!', 'text-green-600');
                
                // Redirect after short delay
                setTimeout(() => {
                    window.location.href = '/job-roles';
                }, 1500);
            } else {
                // Show error message
                showToast('‚ùå', data.message || 'Failed to delete job role.', 'text-red-600');
                confirmButtons.style.display = 'none';
                deleteBtn.style.display = 'inline-flex';
                confirmYes.disabled = false;
                confirmNo.disabled = false;
                confirmYes.textContent = 'Yes';
            }
        } catch (error) {
            console.error('Error deleting job role:', error);
            // If AJAX fails, fall back to traditional form submission
            this.submit();
        }
    });

    // Show toast message
    function showToast(icon, message, colorClass) {
        const toastContainer = toast?.querySelector('div');
        
        toastIcon.textContent = icon;
        toastIcon.className = `text-3xl ${colorClass}`;
        toastMessage.textContent = message;
        toastMessage.className = `font-semibold text-lg ${colorClass}`;
        
        // Add colored border based on type
        if (colorClass.includes('green')) {
            toastContainer.style.borderLeftColor = '#10b981';
        } else if (colorClass.includes('red')) {
            toastContainer.style.borderLeftColor = '#ef4444';
        }
        
        toast?.classList.remove('hidden');
        
        setTimeout(() => {
            toast?.classList.add('hidden');
        }, 3000);
    }
})();
</script>

{% endblock %}